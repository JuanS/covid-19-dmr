{"version":3,"sources":["Context.jsx","Loader.jsx","Calculator.jsx","Evolution.jsx","Current.jsx","Today.jsx","Delta.jsx","Countries.jsx","Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["initialState","days","evolutionDays","data","undefined","countries","country","isBetter","isLoading","reducer","state","action","type","payload","CovidContext","React","createContext","CovidProvider","children","useReducer","dispatch","Provider","value","Loader","useContext","load","useCallback","xhr","XMLHttpRequest","addEventListener","json","JSON","parse","responseText","Object","keys","parsed","qs","window","location","search","defaultCountry","includes","open","send","useEffect","className","CalculateFactor","pos","factor","length","start","deaths","Evolution","evolution","end","i","push","date","fine","extra","calculateEvolution","indexBy","margin","top","right","bottom","left","padding","colors","scheme","enableLabel","enableGridY","isInteractive","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","Current","calculateFactor","isFinite","toFixed","Today","data_orig","format","Date","now","Delta","useState","delta","setDelta","setIsBetter","isValid","setIsValid","calculateDelta","factorToday","factorYesterday","isNaN","Math","abs","Countries","props","optionItems","map","key","onChange","event","target","Home","ReactGA","initialize","pageview","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dcace382.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\n\nconst initialState = {\n  days: 4,\n  evolutionDays: 15,\n  data: undefined,\n  countries: [],\n  country: undefined,\n  isBetter: true,\n  isLoading: true,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'set_is_loading':\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    case 'set_data':\n      return {\n        ...state,\n        data: action.payload,\n      };\n    case 'set_countries':\n      return {\n        ...state,\n        countries: action.payload,\n      };\n    case 'set_country':\n      return {\n        ...state,\n        country: action.payload,\n      };\n    case 'set_is_better':\n      return {\n        ...state,\n        isBetter: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst CovidContext = React.createContext(initialState);\n\nfunction CovidProvider({children}) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <CovidContext.Provider value={{ state, dispatch }}>\n      {children}\n    </CovidContext.Provider>\n  );\n}\n\nexport { CovidContext, CovidProvider };\n","import React, { useContext, useEffect, useCallback } from 'react';\nimport * as qs from 'query-string';\nimport { CovidContext } from './Context';\n\nconst url = 'https://pomber.github.io/covid19/timeseries.json';\n\nconst Loader = () => {\n  const { dispatch } = useContext(CovidContext);\n\n  const load = useCallback(() => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.addEventListener('load', () => {\n      const json = JSON.parse(xhr.responseText);\n\n      const countries = Object.keys(json);\n\n      const parsed = qs.parse(window.location.search);\n      let defaultCountry = parsed.country ? parsed.country : 'Spain';\n\n      if (!countries.includes(defaultCountry)) {\n        defaultCountry = 'Spain';\n      }\n\n      dispatch({\n        type: 'set_countries',\n        payload: Object.keys(json),\n      });\n\n      dispatch({\n        type: 'set_data',\n        payload: json,\n      });\n\n      dispatch({\n        type: 'set_country',\n        payload: defaultCountry,\n      });\n\n      dispatch({\n        type: 'set_is_loading',\n        payload: false,\n      });\n    });\n\n    xhr.open('GET', url);\n    xhr.send();\n  }, [dispatch]);\n\n  useEffect(() => {\n    load();\n  }, [load]);\n\n  return (\n    <div className=\"Current-container\">\n      <span className=\"Loading\">\n        Loading ...\n      </span>\n    </div>\n  );\n};\n\nexport default Loader;\n","const CalculateFactor = (data, pos, days) => {\n  const { length } = data;\n  let factor = -1;\n\n  if (length >= days) {\n    const start = data[pos - days];\n    const end = data[pos - 1];\n    factor = end.deaths / start.deaths;\n  }\n\n  return factor;\n};\n\nexport { CalculateFactor };","import React, { useContext } from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { CovidContext } from './Context';\nimport { CalculateFactor } from './Calculator';\n\nconst Evolution = () => {\n  const { state } = useContext(CovidContext);\n\n  const calculateEvolution = () => {\n\n    const evolution = [];\n\n    if (state.data && state.country) {\n      const data = state.data[state.country];\n      const { length } = data;\n\n      const start = length - state.evolutionDays;\n      const end = length;\n\n      for (let i = start + 1; i <= end; i += 1) {\n        const factor = CalculateFactor(data, i, state.days);\n        evolution.push({\n          date: `${i}`,\n          fine: 1,\n          extra: factor - 1,\n        });\n      }\n    }\n\n    return evolution;\n  };\n\n  const evolution = calculateEvolution();\n\n  return (\n    <div className=\"Evolution-container\">\n      {evolution.length && (\n        <ResponsiveBar\n          data={evolution}\n          keys={[\n            'fine',\n            'extra',\n          ]}\n          indexBy=\"date\"\n          margin={{\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          }}\n          padding={0.3}\n          colors={{ scheme: 'pastel2' }}\n          enableLabel={false}\n          enableGridY={false}\n          isInteractive={false}\n          borderColor={{\n            from: 'color',\n            modifiers: [\n              [\n                'darker',\n                1.6,\n              ],\n            ],\n          }}\n          axisTop={null}\n          axisRight={null}\n          axisBottom={{\n            tickSize: 1,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'last days',\n            legendPosition: 'middle',\n            legendOffset: 32,\n          }}\n          axisLeft={null}\n          labelSkipWidth={12}\n          labelSkipHeight={12}\n          labelTextColor={{\n            from: 'color',\n            modifiers: [\n              [\n                'darker', 1.6,\n              ],\n            ],\n          }}\n          animate={true}\n          motionStiffness={90}\n          motionDamping={15}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Evolution;\n","import React, { useContext } from 'react';\nimport { CovidContext } from './Context';\nimport { CalculateFactor } from './Calculator';\nimport Evolution from './Evolution';\n\nconst Current = () => {\n  const { state } = useContext(CovidContext);\n\n  const calculateFactor = () => {\n    let factor = -1;\n\n    if (state.data && state.country) {\n      const data = state.data[state.country];\n\n      factor = CalculateFactor(data, data.length, state.days);\n\n      // setIsValid(!isNaN(factor));\n    }\n\n    return factor;\n  };\n\n  const factor = calculateFactor();\n\n  return (\n    <div className=\"Current-container\">\n      {isFinite(factor) && (\n        <div className=\"Title\">\n          Covid-19 death multiplication rate*\n          <br/>\n          every 4 days at\n          {' '}\n          {state.country}\n          {' '}\n          today is\n        </div>\n      )}\n      {!isFinite(factor) && (\n        <div className=\"Title\">\n          There is not enough data to calculate\n          <br/>\n          the Covid-19 death multiplication rate*\n          <br/>\n          every 4 days for\n          {' '}\n          {state.country}\n        </div>\n      )}\n      <br/>\n      <span className=\"Current-number\">\n        {isFinite(factor) && factor.toFixed(2)}\n      </span>\n      {!state.isLoading && <Evolution />}\n    </div>\n  );\n};\n\nexport default Current;\n","import React from 'react';\nimport Moment from 'react-moment';\n\nconst Today = ({ data_orig }) => {\n\n  return (\n    <div className=\"Today-container Corner-Top-Right\">\n      <Moment className=\"Today-date\" format=\"dddd, D MMMM\">{Date.now()}</Moment>\n    </div>\n  );\n};\n\nexport default Today;","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { FiArrowDownRight, FiArrowUpRight } from 'react-icons/fi';\nimport { CovidContext } from './Context';\nimport { CalculateFactor } from './Calculator';\n\nconst Delta = () => {\n  const { state, dispatch } = useContext(CovidContext);\n\n  const [delta, setDelta] = useState(0);\n  const [isBetter, setIsBetter] = useState(true);\n  const [isValid, setIsValid] = useState(true);\n\n  const calculateDelta = useCallback(() => {\n    if (state.data && state.country) {\n      const data = state.data[state.country];\n\n      const factorToday = CalculateFactor(data, data.length, state.days);\n      const factorYesterday = CalculateFactor(data, data.length-1, state.days);\n\n      setDelta(factorToday - factorYesterday);\n\n      setIsValid(!isNaN(factorToday) && !isNaN(factorYesterday));\n    }\n  }, [state.country, state.data, state.days]);\n\n  useEffect(() => {\n    calculateDelta();\n    setIsBetter(delta <= 0);\n    dispatch({\n      type: 'set_is_better',\n      payload: isBetter,\n    });\n  }, [calculateDelta, isBetter, setIsBetter, delta, dispatch]);\n\n  return (\n    <div className=\"Delta-container Corner-Top-Right\">\n      {isValid && (\n        <div>\n          {isBetter && <FiArrowDownRight className=\"Delta-icon\" />}\n          {!isBetter && <FiArrowUpRight className=\"Delta-icon\" />}\n\n          <span className=\"Delta-percentage\">{Math.abs(delta.toFixed(2))}</span>\n          <span className=\"Delta-legend\">\n            {' '}\n            {isBetter ? 'less' : 'more'}\n            {' '}\n            than yesterday\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Delta;\n","import React, { useContext } from 'react';\nimport { CovidContext } from './Context';\n\nconst Countries = (props) => {\n  const { state, dispatch } = useContext(CovidContext);\n\n  const handleChange = (event) => {\n    dispatch({\n      type: 'set_country',\n      payload: event.target.value,\n    });\n  };\n\n  const optionItems = state.countries.map((country) => {\n    return (\n      <option key={country} className=\"select-item\">{country}</option>\n    );\n  });\n\n  return (\n    <div className=\"Countries-container Corner-Top-Left\">\n      {!state.isLoading && (\n        <div className=\"select\">\n          <select value={state.country} onChange={handleChange}>\n            {optionItems}\n          </select>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Countries;\n","import React, { useContext, useEffect } from 'react';\nimport ReactGA from 'react-ga';\nimport { CovidContext } from './Context';\nimport Loader from './Loader';\nimport Current from './Current';\nimport Today from './Today';\nimport Delta from './Delta';\nimport Countries from './Countries';\n\nconst Home = () => {\n  const { state } = useContext(CovidContext);\n\n  useEffect(() => {\n    ReactGA.initialize('UA-131741741-2');\n    ReactGA.pageview('/');\n  }, []);\n\n  return (\n    <div className={state.isBetter ? 'isBetter' : 'isNotBetter'}>\n      <Countries />\n      <Today />\n      {state.isLoading && (\n        <Loader />\n      )}\n      {!state.isLoading && <Delta />}\n      {!state.isLoading && <Current />}\n      <span className=\"Legend-Container Corner-Bottom-Left\">\n        *Covid-19 will stop spreading when the rate reaches 1.0\n      </span>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { CovidProvider } from './Context';\nimport './App.css';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CovidProvider>\n        <Home />\n      </CovidProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}